version: "3.8"

services:
  db_shop:
    container_name: db_shop
    image:
      postgres:14-alpine
    volumes:
      - db_shop_volume:/var/lib/postgresql/data
    networks:
      - webnet
    expose:
      - 5432
    restart: on-failure
    env_file: docker/shop/.env.django_secrets_shop
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'dev_db_shop'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5



  web: &web
    container_name: web
    env_file: docker/shop/.env.django_secrets_shop
    build:
      target: development_build
      args:
        DJANGO_ENV: 'dev'
    volumes:
      - ./backend:/code
      - ./config:/config
    environment:
      DJANGO_DEBUG: 1
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/dev_db_shop'
      DATABASE_HOST: 'db_shop'
    depends_on:
      - db_shop
    command: sh /runserver.sh

  celery:
    <<: *web
    container_name: celery
    environment:
      C_FORCE_ROOT: 'true'
      DATABASE_URL: 'postgresql://postgres:postgres@db:5432/dev_db_shop'
      DATABASE_HOST: 'db_shop'
      DATABASE_PORT: '5432'
      REDIS_URL: 'redis://redis:6379/0'
      REDIS_CACHE: 'redis:6379'
      AMQP_URL: 'amqp://rabbitmq:5672'
      CHECK_WEB: 'true'
      WEB_HOST: 'web'
      WEB_PORT: '8000'
    depends_on:
      - redis
      - db_shop
    command: celery -A core worker -B -l INFO

#  db:
#    container_name: db
#    image: postgis/postgis:12-master
#    restart: on-failure
#    volumes:
#      - db-data:/var/lib/postgresql/data
#    networks:
#      - webnet
#    expose:
#      - 5432
#    env_file: ./config/.env
#    environment:
#      POSTGRES_USER: 'postgres'
#      POSTGRES_PASSWORD: 'postgres'
#      POSTGRES_DB: 'dev_db'
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-U", "postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

volumes:
  db_shop_volume: